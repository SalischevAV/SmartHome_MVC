<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    <style>
        body {
            background-color: silver;
            margin: 0;
        }

        .Menu {
        }

        .smartDeviceDrow {
            border: 1px solid black;
            float: left;
            margin: 3px;
            padding: 3px;
            height: 300px;
            width: 30%;
            position: relative;
            background-color: white;
        }

        .delButton {
            right: 0;
            bottom: 0;
            position: absolute;
            float: right;
            margin: 5px;
        }

        .DivLight, .DivMode {
            bottom: 0;
            position: absolute;
            margin: 5px;
            background-color: #66CCFF;
        }

        .devNameLb {
            background-color: #66CCFF;
        }

        .tempValue, .volumeValue, .channelValue {
            width: 27px;
        }

        input.powerState {
            position: relative;
            display: inline-block;
            font-family: Arial,Helvetica,FreeSans,"Liberation Sans","Nimbus Sans L",sans-serif;
            font-size: 1.5em;
            font-weight: 700;
            color: rgb(245,245,245);
            text-shadow: 0 -1px rgba(0,0,0,.1);
            text-decoration: none;
            user-select: none;
            padding: .3em 1em;
            outline: none;
            border: none;
            border-radius: 3px;
            background: #0c9c0d linear-gradient(#82d18d, #0c9c0d);
            box-shadow: inset #72de26 0 -1px 1px, inset 0 1px 1px #98ff98, #3caa3c 0 0 0 1px, rgba(0,0,0,.3) 0 2px 5px;
            -webkit-animation: pulsate 1.2s linear infinite;
            animation: pulsate 1.2s linear infinite;
        }

            input.powerState:hover {
                -webkit-animation-play-state: paused;
                animation-play-state: paused;
                cursor: pointer;
            }

            input.powerState:active {
                top: 1px;
                color: #fff;
                text-shadow: 0 -1px rgba(0,0,0,.3), 0 0 5px #ffd, 0 0 8px #fff;
                box-shadow: 0 -1px 3px rgba(0,0,0,.3), 0 1px 1px #fff, inset 0 1px 2px rgba(0,0,0,.8), inset 0 -1px 0 rgba(0,0,0,.05);
            }

        -webkit-keyframes pulsate {
            50%;

        {
            color: #fff;
            text-shadow: 0 -1px rgba(0,0,0,.3), 0 0 5px #ffd, 0 0 8px #fff;
        }

        }

        keyframes pulsate {
            50%;

        {
            color: #fff;
            text-shadow: 0 -1px rgba(0,0,0,.3), 0 0 5px #ffd, 0 0 8px #fff;
        }

        }

        input.doorState {
            position: relative;
            display: inline-block;
            font-family: Arial,Helvetica,FreeSans,"Liberation Sans","Nimbus Sans L",sans-serif;
            font-size: 1.5em;
            font-weight: 700;
            color: gray;
            text-shadow: 0 -1px rgba(0,0,0,.1);
            text-decoration: none;
            user-select: none;
            padding: .3em 1em;
            outline: none;
            border: none;
            border-radius: 3px;
            background: orchid linear-gradient(#82d18d, #0c9c0d);
            box-shadow: inset #72de26 0 -1px 1px, inset 0 1px 1px #98ff98, #3caa3c 0 0 0 1px, rgba(0,0,0,.3) 0 2px 5px;
            -webkit-animation: pulsate 1.2s linear infinite;
            animation: pulsate 1.2s linear infinite;
        }

            input.doorState:hover {
                -webkit-animation-play-state: paused;
                animation-play-state: paused;
                cursor: pointer;
            }

            input.doorState:active {
                top: 1px;
                color: gray;
                text-shadow: 0 -1px rgba(0,0,0,.3), 0 0 5px #ffd, 0 0 8px #fff;
                box-shadow: 0 -1px 3px rgba(0,0,0,.3), 0 1px 1px #fff, inset 0 1px 2px rgba(0,0,0,.8), inset 0 -1px 0 rgba(0,0,0,.05);
            }

        -webkit-keyframes pulsate {
            50%;

        {
            color: #gray;
            text-shadow: 0 -1px rgba(0,0,0,.3), 0 0 5px #ffd, 0 0 8px #fff;
        }

        }

        keyframes pulsate {
            50%;

        {
            color: #gray;
            text-shadow: 0 -1px rgba(0,0,0,.3), 0 0 5px #ffd, 0 0 8px #fff;
        }

        }


        .lamp{
            width:25px;
            height:25px;
            border: 1px solid black;
            background-color: black;
            display: inline;
        }

        .stateDev{
            background-color: silver;
            float: right;
            width: 90px;
        }
    </style>

    @*<script>
        function sizePic() {
         channelValue = document.getElementById("range").value;
         text = document.getElementById("chan");
         text.value = channelValue;
        }
         </script>*@
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav"></ul>
            </div>
        </div>
    </div>

    <div class="container body-content">
        @RenderBody()
       
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>